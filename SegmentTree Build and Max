"""
Definition of SegmentTreeNode:
class SegmentTreeNode:
    def __init__(self, start, end, max):
        self.start, self.end, self.max = start, end, max
        self.left, self.right = None, None
"""


class Solution:
    """
    @param: A: a list of integer
    @return: The root of Segment Tree
    """
    def build(self, A):
        # write your code here
        return self.buildTree(0, len(A) - 1, A);
    
    def buildTree(self, start, end, A):# start, end, set(no need to specify the range here, just put the whole set)
        if start > end:
            return None;
            
        root = SegmentTreeNode(start, end, A[start]);
        
        if start == end:
            return root;
        
        mid = (end + start) / 2;
        root.left = self.buildTree(start, mid, A);
        root.right = self.buildTree(mid + 1, end, A);
        
        #Update the max of each node
        if root.left != None and root.left.max > root.max:
            root.max = root.left.max;
        if root.right != None and root.right.max > root.max:
            root.max = root.right.max;        
        
        return root;
